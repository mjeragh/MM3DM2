#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Material", "Sphere"]
    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere/DefaultMaterial>
        double radius = 5.0

        def Material "DefaultMaterial"
        {
            prepend token outputs:mtlx:surface.connect = </Root/Sphere/DefaultMaterial/MaterialXPreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.75)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 101.5)

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "MaterialXPreviewSurface"
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                color3f inputs:diffuseColor = (1, 0, 0) (
                    colorSpace = "Input - Texture - Linear - sRGB"
                )
                token outputs:out
                float2 ui:nodegraph:node:pos = (-255, 105)
                float2 ui:nodegraph:node:size = (207.5, 201.5)
                int ui:nodegraph:node:stackingOrder = 1
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:diffuseColor"]
            }
        }
    }
}

